// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider = "mysql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Producto {
  id    Int    @id @default(autoincrement())
  nombre String
}

model SearchQuery {
  id    String @id @default(cuid())
  query String
}

model wallets {
  id             String @id @unique @default(cuid())
  user_id        String
  wallet_address String
}

model transactions {
  id           String   @id @unique @default(cuid())
  user_id      String
  place_id     String
  paymethod_id String
  amount       Decimal
  datetime     DateTime @updatedAt
}

model Places {
  id               String   @id @unique @default(cuid())
  name             String   @unique
  description      String?
  address          String   @unique
  latitude         Decimal?
  longitude        Decimal?
  google_places_id String?
  on_google_maps   Boolean  @default(false)
  profile_pic_url      String?  @default("")
}

model picture_places {
  id       String @id @unique @default(cuid())
  place_id  String
  url String
}


model user_settings {
  id      String  @id @unique @default(cuid())
  user_id String
  key     String
  value   String?
}

model system_settings {
  id    String  @id @unique @default(cuid())
  key   String
  value String?
}

model payment_methods {
  id               String  @id @unique @default(cuid())
  name             String?
  symbol           String?
  terms_policy_url String?
}

model currencies {
  id               String    @id @unique @default(cuid())
  paymethod_id     String
  name             DateTime?
  symbol           String?
  contract_address String?
}

model payment_methods_accepted {
  id           String @id @unique @default(cuid())
  paymethod_id String
  place_id     String
}

model global_tokens {
  id           String   @id @unique @default(cuid())
  key          String
  value        String
  duration     Int?
  is_permanent Boolean  @default(false)
  last_updated DateTime @updatedAt
}

model favorite_places {
  id       String @id @unique @default(cuid())
  user_id  String
  place_id String
}

